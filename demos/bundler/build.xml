<project name="simple-build" basedir=".">
  <!--  internally, watch calls the init target, so need to have one here -->
  <target name="init"/>
  <target name="init-cmd">
    <taskdef  resource="com/sencha/ant/antlib.xml"
              classpath="${cmd.dir}/sencha.jar"
              loaderref="senchaloader"/>
    <x-extend-classpath>
        <jar path="${cmd.dir}/sencha.jar"/>
    </x-extend-classpath>
    <x-sencha-init prefix=""/>
    <x-compile refid="theCompiler"
                      dir="${basedir}"
                      initOnly="true"
                      inheritAll="true">
              <![CDATA[
              -classpath=${basedir}/${app.manifest}/manifest.${app.name}.js
              load-app
                  -temp=${basedir}/${app.build}/${app.name}/temp
                  -tag=App
        ]]>
      </x-compile>
  </target>
  <target name="rebuild">
    <x-compile refid="theCompiler"
              dir="${basedir}"
              inheritAll="true">
      <![CDATA[
      --debug
      exclude
      -all
      and
      include
      -f=Boot.js
      and
      concatenate
          ${app.build}/${app.name}/ext.${app.name}.dev.js
      and
      exclude
      -all
      and
      # include theme overrides
      include
        -r
        -tag=overrides
      and
      # include all js files needed for manifest.js
      include
          -r
          -f=${app.manifest}/manifest.${app.name}.js
      and
      # exclude the generated manifest file itself,
      # since we don't want the generated bundle file to create any components
      exclude
      -f=${app.manifest}/manifest.${app.name}.js
      and
      concatenate
      +append
          ${app.build}/${app.name}/ext.${app.name}.dev.js
      and
      scss
          -appName=App
          -imageSearchPath=resources
          -themeName=material
          -resourceMapBase=.
          -output=${app.build}/${app.name}/ext.${app.name}.scss
      and
      resources
          -excludes=-all*.css
          -out=${app.build}/${app.name}/resources
      and
      resources
          -model=true
          -out=${app.build}/${app.name}/resources
      ]]>
    </x-compile>
  </target>
  <target name="build" depends="init-cmd,rebuild">
    <x-sencha-command dir="${basedir}">
      <![CDATA[
      fashion
          -pwd=.
          -split=4095
          -compress
              ${app.build}/${app.name}/ext.${app.name}.scss
              ${app.build}/${app.name}/ext.${app.name}.css

      then

      fs
      minify
        -yui
        -from=${app.build}/${app.name}/ext.${app.name}.dev.js
        -to=${app.build}/${app.name}/ext.${app.name}.prod.js

      ]]>
    </x-sencha-command>
  </target>
  <target name="watch" depends="init-cmd,build">
    <x-fashion-watch
      refName="fashion-watch"
      inputFile="${app.build}/${app.name}/ext.${app.name}.scss"
      outputFile="${app.build}/${app.name}/ext.${app.name}.css"
      split="4095"
      compress="true"
      configFile="app.json"
      fork="true"/>
    <x-watch compilerRef="theCompiler" targets="rebuild"/>
  </target>
</project>